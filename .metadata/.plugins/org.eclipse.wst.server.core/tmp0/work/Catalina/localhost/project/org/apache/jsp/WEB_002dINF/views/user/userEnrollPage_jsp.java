/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-12-28 10:19:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userEnrollPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"https://code.jquery.com/jquery-3.5.1.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 메뉴바 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"content\">\r\n");
      out.write("\r\n");
      out.write("	<div class=\"innerOuter\">\r\n");
      out.write("	<h2>회원가입</h2>\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("	<form action=\"insert.me\" method=\"post\" id=\"userEnroll\">\r\n");
      out.write("		<div class=\"form-group\">\r\n");
      out.write("\r\n");
      out.write("			<div id=\"asd\">\r\n");
      out.write("				<label for=\"userId\">* 아이디 : </label> \r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userId\" name=\"userId\"\r\n");
      out.write("				placeholder=\"영문자,숫자를 포함하여 총 4~20자로 입력해주세요\" required>\r\n");
      out.write("				<div id=\"idcheck\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("				<label for=\"userName\">* 이름 : </label> \r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userName\" name=\"userName\"\r\n");
      out.write("				placeholder=\"이름을 입력해주세요\" value=\"\" required> 					\r\n");
      out.write("				<br>\r\n");
      out.write("						\r\n");
      out.write("				<label for=\"userPwd\">* 비밀번호 : </label> \r\n");
      out.write("				<input type=\"password\" class=\"form-control\" id=\"userPwd\" name=\"userPwd\" \r\n");
      out.write("				placeholder=\"영문자,숫자,특수문자로 총 8~15자로 입력해주세요\" value=\"\" required>\r\n");
      out.write("				<br>\r\n");
      out.write("					\r\n");
      out.write("				<div id=\"asdasd\">\r\n");
      out.write("				<label for=\"userPwdchk\">* 비밀번호 재확인 : </label> \r\n");
      out.write("				<input type=\"password\" class=\"form-control\" id=\"userPwdchk\" name=\"userPwdchk\"\r\n");
      out.write("				placeholder=\"비밀번호 재확인을 입력해주세요\" value=\"\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<br>  \r\n");
      out.write("					\r\n");
      out.write("				<label for=\"userBirth\">* 생년월일 : </label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userBirth\" name=\"userBirth\"\r\n");
      out.write("				placeholder=\"생년월일을 입력해주세요 ex)yyyymmdd\" value=\"\" required>\r\n");
      out.write("				<br> \r\n");
      out.write("					\r\n");
      out.write("				<label for=\"userEmail\">* 이메일 : </label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userEmail\" name=\"userEmail\"\r\n");
      out.write("				placeholder=\"이메일을 입력해주세요.\" >\r\n");
      out.write("				<br>\r\n");
      out.write("				\r\n");
      out.write("				<label for=\"userPhone\">* 핸드폰 번호 : </label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userPhone\" name=\"userPhone\"\r\n");
      out.write("				placeholder=\"'-'를 제외한 전화번호를 입력해주세요\" value=\"\" required>\r\n");
      out.write("				<br>\r\n");
      out.write("\r\n");
      out.write("				<label for=\"userAddress\">* 주소 </label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userAddress\" name=\"userAddress\"\r\n");
      out.write("				placeholder=\"클릭하여 주소를 입력하세요\" readonly required>\r\n");
      out.write("				<br>\r\n");
      out.write("					\r\n");
      out.write("				<label for=\"userAddressDetail\">* 상세주소 </label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control\" id=\"userAddressdetail\" name=\"userAddressdetail\"\r\n");
      out.write("				placeholder=\"상세 주소를 입력하세요\" required>\r\n");
      out.write("				<br>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("				<br>\r\n");
      out.write("		<div class=\"btns\" align=\"center\">\r\n");
      out.write("			<button type=\"submit\" class=\"btn btn-primary\">회원가입</button>\r\n");
      out.write("			<button type=\"reset\" class=\"btn btn-danger\">초기화</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	//아이디 중복체크\r\n");
      out.write("	$(function(){\r\n");
      out.write("		let $idchk = $(\"#userEnroll input[name=userId]\");\r\n");
      out.write("	\r\n");
      out.write("		$idchk.keyup(function(){\r\n");
      out.write("				\r\n");
      out.write("			if($idchk.val().length>=4){\r\n");
      out.write("	        	$.ajax({\r\n");
      out.write("	        		url : \"idCheck.ui\",\r\n");
      out.write("	        		data : { checkId : $idchk.val()\r\n");
      out.write("	        		},\r\n");
      out.write("	        		success : function(result){\r\n");
      out.write("	        			if(result == \"NNNNN\"){ //아이디 사용불가능\r\n");
      out.write("	        				$(\"#idcheck\").show();\r\n");
      out.write("	        				$(\"#idcheck\").css(\"color\",\"red\").text(\"중복된 아이디가 존재합니다. 다른 아이디를 입력해주세요.\");\r\n");
      out.write("	        				//회원가입 버튼 비활성화 시키기\r\n");
      out.write("	        				$(\"#userEnroll :submit\").attr(\"disabled\",true);\r\n");
      out.write("	        						\r\n");
      out.write("	        			}else{ //아이디 사용가능\r\n");
      out.write("	        				$(\"#idcheck\").show();\r\n");
      out.write("	        				$(\"#idcheck\").css(\"color\",\"blue\").text(\"사용 가능한 아이디입니다\")\r\n");
      out.write("	        				$(\"#userEnroll :submit\").attr(\"disabled\",false);\r\n");
      out.write("	        			}	        					\r\n");
      out.write("	        		},\r\n");
      out.write("	        			error : function(){\r\n");
      out.write("	        				console.log(\"통신실패\");\r\n");
      out.write("	        			}\r\n");
      out.write("	        	})\r\n");
      out.write("	       }else{ //4글자 미만일때 - 메세지 숨기기\r\n");
      out.write("	         	$(\"#idcheck\").hide();\r\n");
      out.write("	            $(\"#enrollForm :submit\").attr(\"disabled\",true);\r\n");
      out.write("	       }\r\n");
      out.write("		})\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	window.onload = function(){\r\n");
      out.write("	    document.getElementById(\"userAddress\").addEventListener(\"click\", function(){ //주소입력칸을 클릭하면\r\n");
      out.write("	        //카카오 지도 발생\r\n");
      out.write("	        new daum.Postcode({\r\n");
      out.write("	            oncomplete: function(data) { //선택시 입력값 세팅\r\n");
      out.write("	                document.getElementById(\"userAddress\").value = data.address; // 주소 넣기\r\n");
      out.write("	                document.querySelector(\"input[name=address_detail]\").focus(); //상세입력 포커싱\r\n");
      out.write("	            }\r\n");
      out.write("	        }).open();\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //정규표현식 만들기\r\n");
      out.write("// 	function validate(){\r\n");
      out.write("//     	var userName = document.getElementById(\"userName\").value;\r\n");
      out.write("//         var userPwd = document.getElementById(\"userPwd\").value;\r\n");
      out.write("//         var userPwdchk = document.getElementById(\"userPwdchk\").value;\r\n");
      out.write("//         var userBirth = document.getElementById(\"userBirth\").value;\r\n");
      out.write("//         var userPhone = document.getElementById(\"userPhone\").value;\r\n");
      out.write("        	    \r\n");
      out.write("//         	    regExp=/^[가-힣]{2,}$/;\r\n");
      out.write("//         	      if(!regExp.test(userName)){\r\n");
      out.write("//         	          alert(\"유효한 이름을 입력해주세요.\")\r\n");
      out.write("//         	          document.getElementById(\"userName\").select(); \r\n");
      out.write("//         	          return false;\r\n");
      out.write("//         	      }\r\n");
      out.write("        	      \r\n");
      out.write("//         	    regExp=/^[a-z\\d!@#$%^&*\\s]{8,15}$/i;\r\n");
      out.write("//         	      if(!regExp.test(userPwd)){\r\n");
      out.write("//         	          alert(\"비밀번호 입력 시 영문자,숫자,특수문자로 총 8~15자로 입력해주세요.\");\r\n");
      out.write("//         	          document.getElementById(\"userPwd\").select();\r\n");
      out.write("//         	          return false;\r\n");
      out.write("//         	      }\r\n");
      out.write("        	      \r\n");
      out.write("//         	      if(userPwd!=userPwdchk){\r\n");
      out.write("//         	          alert(\"비밀번호와 동일하게 입력해주세요.\");\r\n");
      out.write("//         	          document.getElementById(\"userPwdchk\").select();\r\n");
      out.write("//         	          return false;\r\n");
      out.write("//         	      }\r\n");
      out.write("        	      \r\n");
      out.write("//         	    regExp=/^(19[0-9][0-9]|20\\d{2})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;\r\n");
      out.write("//         	      if(!regExp.test(userBirth)){\r\n");
      out.write("//         	          alert(\"형식에 맞춰서 생년월일을 입력해주세요.\")\r\n");
      out.write("//         	          document.getElementById(\"userBirth\").select(); \r\n");
      out.write("//         	          return false;\r\n");
      out.write("//         	      }\r\n");
      out.write("        	      \r\n");
      out.write("//         	    regExp=/^01([0|1|6|7|8|9])?([0-9]{4})?([0-9]{4})$/;\r\n");
      out.write("//         	      if(!regExp.test(userPhone)){\r\n");
      out.write("//         	          alert(\"'-'를 제외한 전화번호를 입력해주세요.\")\r\n");
      out.write("//         	          document.getElementById(\"userPhone\").select(); \r\n");
      out.write("//         	          return false;\r\n");
      out.write("//         	      }\r\n");
      out.write("//         	}\r\n");
      out.write("        	\r\n");
      out.write("//         	//ID 중복체크 비동기통신 구현\r\n");
      out.write("//         	$(function(){\r\n");
      out.write("//     	let $idchk = $(\"#userEnroll input[name=userId]\");\r\n");
      out.write("    \r\n");
      out.write("//     		$idchk.keyup(function(){\r\n");
      out.write("//     		    var userId = document.getElementById(\"userId\").value;\r\n");
      out.write("//     			var regExp= /^[a-zA-Z](?=.*[a-zA-Z])(?=.*?[0-9]).{3,19}$/;\r\n");
      out.write("    			\r\n");
      out.write("//     			if($idchk.val().length>=4){\r\n");
      out.write("    				\r\n");
      out.write("// 	            		$.ajax({\r\n");
      out.write("// 	        				url : \"idCheck.ui\",\r\n");
      out.write("// 	        				data : {\r\n");
      out.write("// 	        					checkId : $idchk.val()\r\n");
      out.write("// 	        				},\r\n");
      out.write("// 	        				success : function(result){\r\n");
      out.write("// 	        					if(result == \"NNNNN\"){ \r\n");
      out.write("// 	        						$(\"#idcheck\").show();\r\n");
      out.write("// 	        						$(\"#idcheck\").css(\"color\",\"red\").text(\"중복된 아이디이거나 탈퇴된 아이디입니다. 다른 아이디를 입력해주세요.\");\r\n");
      out.write("// 	        						$(\"#userEnroll :submit\").attr(\"disabled\",true);\r\n");
      out.write("// 	        					} else{\r\n");
      out.write("// 		        					if(regExp.test(userId)==true){\r\n");
      out.write("// 		        						$(\"#idcheck\").show();\r\n");
      out.write("// 		        						$(\"#idcheck\").css(\"color\",\"blue\").text(\"멋진 아이디네요!\");\r\n");
      out.write("// 		        						$(\"#userEnroll :submit\").attr(\"disabled\",false);\r\n");
      out.write("// 		        						return false;\r\n");
      out.write("// 		        					}\r\n");
      out.write("// 	        					}\r\n");
      out.write("// 	        				},\r\n");
      out.write("// 	        				error : function(){\r\n");
      out.write("	        						\r\n");
      out.write("// 	        						console.log(\"통신실패했다람쥐\");\r\n");
      out.write("// 	        				}\r\n");
      out.write("// 	        			})\r\n");
      out.write("// 	            	}else{ \r\n");
      out.write("// 	            		$(\"#idcheck\").hide();\r\n");
      out.write("	            	\r\n");
      out.write("// 	            		$(\"#userEnroll :submit\").attr(\"disabled\",true);\r\n");
      out.write("// 	            	}\r\n");
      out.write("//     	})\r\n");
      out.write("//     })\r\n");
      out.write("        	\r\n");
      out.write("//     //비밀번호 비교 확인.\r\n");
      out.write("//     $(function(){\r\n");
      out.write("// 	    $('#userPwd').keyup(function(){\r\n");
      out.write("// 	      $('#chkNotice').html('');\r\n");
      out.write("// 	    });\r\n");
      out.write("	\r\n");
      out.write("// 	$('#userPwdchk').keyup(function(){\r\n");
      out.write("// 		if($('#userPwd').val() != $('#userPwdchk').val()){\r\n");
      out.write("// 	    	$('#chkNotice').html('비밀번호가 일치하지 않습니다');\r\n");
      out.write("// 	        $('#chkNotice').attr('color', 'red');\r\n");
      out.write("// 	        $(\"#userEnroll :submit\").attr(\"disabled\",true);\r\n");
      out.write("// 	        } else{\r\n");
      out.write("// 	          $('#chkNotice').html('비밀번호가 일치합니다');\r\n");
      out.write("// 	          $('#chkNotice').attr('color', 'blue');\r\n");
      out.write("// 	          $(\"#userEnroll :submit\").attr(\"disabled\",false);\r\n");
      out.write("// 	        }\r\n");
      out.write("	\r\n");
      out.write("// 	    });\r\n");
      out.write("// 	});\r\n");
      out.write("        	\r\n");
      out.write("        	\r\n");
      out.write("//     function characterCheck(obj){\r\n");
      out.write("//         		var regExp = /[ \\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+┼<>@#$%&\\'\\\"\\\\\\(\\=가-힣ㄱ-ㅎㅏ-ㅣ]/gi; \r\n");
      out.write("//         		if( regExp.test(obj.value) ){\r\n");
      out.write("//         		alert(\"한글 및 특수문자는 입력하실수 없습니다.\");\r\n");
      out.write("//         		obj.value = obj.value.substring( 0 , obj.value.length - 1 ); // 입력한 특수문자 한자리 지움\r\n");
      out.write("//         		}\r\n");
      out.write("//         	}\r\n");
      out.write("        	\r\n");
      out.write("//         	$(document).ready(function() { \r\n");
      out.write("//             	$(\"[name=userId]\").attr(\"required\" , true);    \r\n");
      out.write("//             	});\r\n");
      out.write("        	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
