/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-12-30 08:26:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class productInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1672382798122L));
    _jspx_dependants.put("jar:file:/C:/202212PJ/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MiniProject/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품등록</title>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery 라이브러리 -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- naver스마트에디터 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"/smarteditor2/js/HuskyEZCreator.js\" charset=\"UTF-8\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".content {\r\n");
      out.write("	background-color: rgb(247, 245, 245);\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".innerOuter {\r\n");
      out.write("	border: 1px solid lightgray;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	padding: 5% 10%;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#enrollForm>table {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#enrollForm>table * {\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"hero page-inner overlay\" style=\"background-image: url('./resources/images/hero_bg_1.jpg'); height: 200px;\">\r\n");
      out.write("\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row justify-content-center align-items-center\" style=\"height: 300px;\">\r\n");
      out.write("				<div class=\"col-lg-9 text-center mt-5\">\r\n");
      out.write("					<h1 class=\"heading\" data-aos=\"fade-up\" style=\"padding-top: 50px;\">상품 등록</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"content\">\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<div class=\"innerOuter\">\r\n");
      out.write("			<br><br>\r\n");
      out.write("\r\n");
      out.write("			<form id=\"enrollForm\" method=\"post\" action=\"productInsert.ui\">\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("                \r\n");
      out.write("					               \r\n");
      out.write("                	\r\n");
      out.write("                    <label for=\"productName\">* 제목 : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"productName\" placeholder=\"제목을 입력하세요\" name=\"productName\" required> <br>\r\n");
      out.write("					\r\n");
      out.write("					<label for=\"productType\">* 상품유형 : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"productType\" placeholder=\"상품 유형을 입력하세요(ex 고양이,강아지 등...)\" name=\"productType\" required> <br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"productCount\">* 상품개수 : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"productCount\" placeholder=\"개수를 입력하세요(숫자만)\" name=\"productCount\" required> <br>\r\n");
      out.write("\r\n");
      out.write("                    \r\n");
      out.write("					\r\n");
      out.write("                    <label for=\"productPrice\">* 상품 가격 : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"productPrice\" placeholder=\"숫자만 입력하세요(숫자만)\" name=\"productPrice\" required> <br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"productContent\">* 내용 : </label>\r\n");
      out.write("                    <textarea class=\"form-control\" rows=\"30\" id=\"productContent\" placeholder=\"내용을 입력하세요\" name=\"productContent\" required></textarea> <br>\r\n");
      out.write("                    \r\n");
      out.write("                </div>\r\n");
      out.write("				\r\n");
      out.write("				<div align=\"center\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.userNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"productWriter\">\r\n");
      out.write("					<button type=\"submit\" id=\"insert\" class=\"btn btn-primary\" onclick=\"submitContents();\">등록하기</button>\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-danger\" onclick=\"history.back();\">뒤로가기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  var oEditors = [];\r\n");
      out.write("  nhn.husky.EZCreator.createInIFrame({\r\n");
      out.write("  oAppRef: oEditors,\r\n");
      out.write("  elPlaceHolder: \"productWriter\",\r\n");
      out.write("  sSkinURI: \"/MiniProject/src/main/webapp/SmartEditor2Skin.html\",\r\n");
      out.write("  fCreator: \"createSEditor2\"\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  //‘저장’ 버튼을 누르는 등 저장을 위한 액션을 했을 때 submitContents가 호출된다고 가정한다.\r\n");
      out.write("  function submitContents(elClickedObj) {\r\n");
      out.write("  // 에디터의 내용이 textarea에 적용된다.\r\n");
      out.write("  oEditors.getById[\"productWriter\"].exec(\"UPDATE_CONTENTS_FIELD\", [ ]);\r\n");
      out.write("  document.getElementById(\"form\").submit();\r\n");
      out.write("  // 에디터의 내용에 대한 값 검증은 이곳에서\r\n");
      out.write("  // document.getElementById(\"textAreaContent\").value를 이용해서 처리한다.\r\n");
      out.write("\r\n");
      out.write("  try {\r\n");
      out.write("  elClickedObj.form.submit();\r\n");
      out.write("  } catch(e) {\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<br><br>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
